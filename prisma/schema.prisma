// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Users {
  id          String   @id @default(uuid())
  Username    String
  name        String
  email       String   @unique()
  img         String
  role        Role     @default(NULL)
  skills      String[] @default([""])
  DOB         DateTime @default(now())
  description String   @default("")
  country     String   @default("")
  phNumber    String   @default("")

  projects    Project[]
  blogs       Blogs[]
  reviews     Reviews[]
  applicaions Applications[]
}

model Applications {
  id          String   @id @default(uuid())
  projectId   String
  project     Project  @relation(fields: [projectId], references: [id])
  applicantId String   @unique
  applicant   Users    @relation(fields: [applicantId], references: [id])
  answers     String[] @default([""])
}

model Project {
  id           String         @id @default(uuid())
  title        String
  description  String
  stipend      Float          @default(0)
  postedBy     Users          @relation(fields: [postedById], references: [id])
  postedById   String
  requests     String[]       @default([""])
  deliverBy    DateTime       @default(now())
  category     String[]       @default([""])
  questions    String[]       @default(["Describe your skills and approach towards the project."])
  isCompleted  IsCompleted    @default(FALSE)
  applications Applications[]
  tasks        Task[]
}

model Task {
  id        String  @id @default(uuid())
  task      String
  status    Status  @default(NOT_STARTED)
  project   Project @relation(fields: [projectId], references: [id])
  projectId String
}

model Reviews {
  id          String @id @default(uuid())
  postedBy    Users  @relation(fields: [postedById], references: [id])
  postedById  String
  workerId    String
  rating      Float
  description String
}

model Blogs {
  id        String   @id @default(uuid())
  creatorId String
  creator   Users    @relation(fields: [creatorId], references: [id])
  title     String
  thumbnail String?  @default("")
  body      String   @default("")
  tags      String[] @default([])
  createdAt DateTime @default(now())
}

enum Role {
  CLIENT
  WORKER
  NULL
}

enum IsCompleted {
  TRUE
  FALSE
}

enum Status {
  NOT_STARTED
  ONGOING
  COMPLETED
}
